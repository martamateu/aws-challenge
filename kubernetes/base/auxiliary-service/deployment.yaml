apiVersion: apps/v1
kind: Deployment
metadata:
  name: auxiliary-service
  namespace: auxiliary-service
  labels:
    app: auxiliary-service
    version: v1
    project: aws-challenge
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auxiliary-service
  template:
    metadata:
      labels:
        app: auxiliary-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: auxiliary-service-sa
      containers:
      - name: auxiliary-service
        image: martamateul/auxiliary-service:main-ba98634
        imagePullPolicy: Always
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: auxiliary-service-config
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "192Mi"
            cpu: "150m"
          limits:
            memory: "384Mi"
            cpu: "300m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 20
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
